#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{listings}
\usepackage{color} %red, green, blue, yellow, cyan, magenta, black, white
\usepackage{courier}
\usepackage{verbatim}
\definecolor{mygreen}{RGB}{66,152,33} % color values Red, Green, Blue
\definecolor{mylilas}{RGB}{170,55,241}
\definecolor{myblue}{RGB}{31,1,255}
\lstset{
%flexiblecolumns=true,
    language=Matlab,
    basicstyle=\small\ttfamily,
    breaklines=true,%
    morekeywords={matlab2tikz},
    keywordstyle=\color{black},%
    morekeywords=[2]{1}, keywordstyle=[2]{\color{black}},
    identifierstyle=\color{black},%
    stringstyle=\color{mylilas},
    commentstyle=\color{mygreen},%
    showstringspaces=false,%without this there will be a symbol in the places where there is a space
    numbers=left,%
    numberstyle={\tiny \color{black}},% size of the numbers
    numbersep=9pt, % this defines how far the numbers are from the text
    emph=[1]{for,end,break},emphstyle=[1]\color{myblue}, %some words to emphasise
    %emph=[2]{word1,word2}, emphstyle=[2]{style},   
}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Práctica 1.
 Medida de Temperatura con Sensor LM35
\end_layout

\begin_layout Author
Àlex Benítez, Xavier Escribà, Pau Gabarrell
\end_layout

\begin_layout Date
27 de Abril de 2017
\end_layout

\begin_layout Right Address
220053–Avionica
\end_layout

\begin_layout Section
Sensor y acondicionador
\end_layout

\begin_layout Standard
En el primer apartado de la práctica se medirá los valores suministrados
 por el LM35 y se montará y ajustará el acondicionador de señal en una protoboar
d.
 
\end_layout

\begin_layout Subsection
Estimar el valor de la temperatura ambiente (
\begin_inset ERT
status open

\begin_layout Plain Layout

$T_{amb}$
\end_layout

\end_inset

) y la temperatura apretando el sensor con los dedos (
\begin_inset ERT
status open

\begin_layout Plain Layout

$T_{max}$
\end_layout

\end_inset

) conectando la salida del LM35 directamente a un multímetro y aplicando
 la expresión de la sensibilidad dada en las características del LM35 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{cases}
T_{amb}= & 23\,^{o}C\\
T_{max}= & 30\,^{o}C
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Subsection
Montar correctamente el acondicionador en la protoboard
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Sense_arduino_bb.png
	width 15cm

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ajustar y calibrar el acondicionador para que la salida valga 2.5V a 
\begin_inset ERT
status open

\begin_layout Plain Layout

$T_{amb}$
\end_layout

\end_inset

 ¿Cuánto vale la salida a la temperatura 
\begin_inset ERT
status open

\begin_layout Plain Layout

$T_{max}$
\end_layout

\end_inset

?
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Salida=4V
\]

\end_inset


\end_layout

\begin_layout Standard
Hay que destacar que en el divisor de tensión se conseguían solamente 2.1V,
 suponemos que debido a la tolerancia de las resistencias, por dicho motivo
 no se ha alcanzado un valor superior en la salida.
\end_layout

\begin_layout Section
Adquisición de datos con arduino
\end_layout

\begin_layout Standard
En este apartado se montará el sistema completo en una protoboard y se hará
 un primer programa sencillo de adquisición de datos de temperatura.
\end_layout

\begin_layout Subsection
Montar correctamente en la protoboard el conjunto sensor-acondicionador
 conectado al microcontrolador arduino UNO.
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Amb_arduino_bb.png
	width 15cm

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Programar en el arduino una adquisición continua de datos procedentes del
 acondicionador usando la función analogRead.
\end_layout

\begin_layout Standard

\lang spanish
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting{exercici22.ino}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\lang spanish
El código usado contiene en primer lugar una declaración de las variables
 globales que van a ser usadas por el programa, dichas variables son el
 pin que usaremos para el 
\series bold
analogRead
\series default
, el 
\series bold
analog_data
\series default
 que será la variable en la que guardaremos el valor leído por el 
\series bold
analogRead 
\series default
y finalmente
\series bold
 temp
\series default
, la variable en la que se almacenara la conversion del 
\series bold
analog_data
\series default
 para mostrar grados centigrados.
 En el 
\series bold
setup
\series default
 simplemente si ha iniciado el 
\series bold
serial port
\series default
 para poder ver que valores de temperatura está leyendo del 
\series bold
analogRead
\series default
.
 Dentro del 
\series bold
loop
\series default
 del programa se realiza lo antes descrito, primero se obtiene el valor
 leído por el 
\series bold
ADC
\series default
 (analog to digital converter), se opera dicho valor para tenerlo en grados
 centigrados y finalmente se muestra por el 
\series bold
serial port
\series default
.
\end_layout

\begin_layout Subsection

\lang spanish
Anotar los valores enteros obtenidos de la función analogRead a 
\begin_inset ERT
status open

\begin_layout Plain Layout

$T_{amb}$
\end_layout

\end_inset

 y a 
\begin_inset ERT
status open

\begin_layout Plain Layout

$T_{max}$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard

\lang spanish
Para realizar este apartado se ha modificado la línea 12 del código por
 esta:
\end_layout

\begin_layout Standard

\lang spanish
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
Serial.println(analog_data);
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\lang spanish
De esta forma se ha obtenido el valor que nos piden en este apartado.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{cases}
analogRead\,a\,T_{amb}=\\
analogRead\,a\,T_{max}=
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
¿Son correctos estos valores? Razonar la respuesta.
\end_layout

\begin_layout Subsection
Ampliar el programa para visualizar los valores correctos de Tamb y Tmax.
\end_layout

\begin_layout Standard
El anterior código mostrado ya tenía la implementación que nos piden en
 este apartado.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{cases}
T_{amb}=\\
T_{max}=
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Section
Temporización de la visualización
\end_layout

\begin_layout Standard
En este apartado se trata de reajustar el programa para que actualice la
 temperatura cada 0,5 segundos, en lugar de estar actualizando continuamente.
 
\end_layout

\begin_layout Subsection
Utilizar la función delay del arduino para que la temperatura se actualice
 cada 0,5 s.
\end_layout

\begin_layout Standard
Para implementar lo que se nos pide simplemente hay que añadir una linea
 de código, resultando en:
\end_layout

\begin_layout Standard

\lang spanish
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting{exercici33.ino}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\lang spanish
A la función 
\series bold
delay
\series default
 hay que decirle en milisegundos el tiempo de espera que se quiere, por
 esto se le ha puesto 500 de valor.
\end_layout

\begin_layout Section

\lang spanish
Alarmas de temperatura
\end_layout

\begin_layout Standard

\lang spanish
En este último apartado se modificará el programa para que se encienda un
 led cuando se alcance las temperaturas extremas 
\begin_inset ERT
status open

\begin_layout Plain Layout

$T_{amb}$
\end_layout

\end_inset

 y 
\begin_inset ERT
status open

\begin_layout Plain Layout

$T_{max}$
\end_layout

\end_inset

.
 Se debe visualizar claramente como se enciende al alcanzar estas temperaturas
 y como se apaga al salir de ellas (tener en cuenta que el paso de temperatura
 ambiente hasta la máxima, apretando el sensor, y viceversa, no es inmediato,
 por lo que debe ser posible ver el transitorio).
\end_layout

\begin_layout Subsection

\lang spanish
Buscar información para averiguar con cuál de los pines digitales del arduino
 UNO se puede encender el led L que hay en la placa arduino.
\end_layout

\begin_layout Standard

\lang spanish
De la documentación oficial disponible en 
\shape italic
www.arduino.cc 
\shape default
se ha obtenido que el pin para controlar el LED de la placa es:
\end_layout

\begin_layout Standard

\lang spanish
\begin_inset Formula 
\[
Pin=13
\]

\end_inset


\end_layout

\begin_layout Subsection

\lang spanish
Programar el arduino para encender el led L cuando la temperatura es mayor
 o igual que 
\begin_inset ERT
status open

\begin_layout Plain Layout

$T_{max}$
\end_layout

\end_inset

 y cuando la temperatura es menor o igual que 
\begin_inset ERT
status open

\begin_layout Plain Layout

$T_{amb}$
\end_layout

\end_inset

.
 Dejar un margen adecuado tanto en el máximo como en el mínimo para que
 se pueda apreciar con claridad el encendido y el apagado.
 Para este programa se deben usar las funciones pinMode y digitalWrite.
\end_layout

\begin_layout Standard

\lang spanish
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting{sketch_apr27a.ino}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\lang spanish
Para realizar este apartado se ha procedido igual que en los anteriores
 para calcular la temperatura detecada por el sensor.
 Para el accionado del control del LED se ha usado una combinación de 
\series bold
if
\series default
, 
\series bold
else if
\series default
 y 
\series bold
else
\series default
, se ha hecho que a partir de cierta temperatura se encienda el led, que
 por debajo de cierta temperatura se encienda el led, y que cuando esta
 en el medio se apague.
 Para calibrar dicha función se han usado los valores de 23.5 i 27 grados
 centigrados de acuerdo con la temperatura existente al laboratorio en el
 momento de la realización de la práctica.
\end_layout

\begin_layout Section

\lang spanish
Ampliación
\end_layout

\end_body
\end_document
